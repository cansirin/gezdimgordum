// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.3
// source: rpc/landmark-api/service.proto

package landmark_api

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateLandmarkRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId      string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Name        string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Slug        string `protobuf:"bytes,3,opt,name=slug,proto3" json:"slug,omitempty"`
	Address     string `protobuf:"bytes,4,opt,name=address,proto3" json:"address,omitempty"`
	State       string `protobuf:"bytes,5,opt,name=state,proto3" json:"state,omitempty"`
	Description string `protobuf:"bytes,6,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *CreateLandmarkRequest) Reset() {
	*x = CreateLandmarkRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_landmark_api_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateLandmarkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateLandmarkRequest) ProtoMessage() {}

func (x *CreateLandmarkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_landmark_api_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateLandmarkRequest.ProtoReflect.Descriptor instead.
func (*CreateLandmarkRequest) Descriptor() ([]byte, []int) {
	return file_rpc_landmark_api_service_proto_rawDescGZIP(), []int{0}
}

func (x *CreateLandmarkRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *CreateLandmarkRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateLandmarkRequest) GetSlug() string {
	if x != nil {
		return x.Slug
	}
	return ""
}

func (x *CreateLandmarkRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *CreateLandmarkRequest) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *CreateLandmarkRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type GetLandmarkRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID string `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
}

func (x *GetLandmarkRequest) Reset() {
	*x = GetLandmarkRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_landmark_api_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLandmarkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLandmarkRequest) ProtoMessage() {}

func (x *GetLandmarkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_landmark_api_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLandmarkRequest.ProtoReflect.Descriptor instead.
func (*GetLandmarkRequest) Descriptor() ([]byte, []int) {
	return file_rpc_landmark_api_service_proto_rawDescGZIP(), []int{1}
}

func (x *GetLandmarkRequest) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

type GetLandmarkBySlugRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Slug string `protobuf:"bytes,1,opt,name=slug,proto3" json:"slug,omitempty"`
}

func (x *GetLandmarkBySlugRequest) Reset() {
	*x = GetLandmarkBySlugRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_landmark_api_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLandmarkBySlugRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLandmarkBySlugRequest) ProtoMessage() {}

func (x *GetLandmarkBySlugRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_landmark_api_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLandmarkBySlugRequest.ProtoReflect.Descriptor instead.
func (*GetLandmarkBySlugRequest) Descriptor() ([]byte, []int) {
	return file_rpc_landmark_api_service_proto_rawDescGZIP(), []int{2}
}

func (x *GetLandmarkBySlugRequest) GetSlug() string {
	if x != nil {
		return x.Slug
	}
	return ""
}

type GetLandmarksByStateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	State string `protobuf:"bytes,1,opt,name=state,proto3" json:"state,omitempty"`
}

func (x *GetLandmarksByStateRequest) Reset() {
	*x = GetLandmarksByStateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_landmark_api_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLandmarksByStateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLandmarksByStateRequest) ProtoMessage() {}

func (x *GetLandmarksByStateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_landmark_api_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLandmarksByStateRequest.ProtoReflect.Descriptor instead.
func (*GetLandmarksByStateRequest) Descriptor() ([]byte, []int) {
	return file_rpc_landmark_api_service_proto_rawDescGZIP(), []int{3}
}

func (x *GetLandmarksByStateRequest) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

type GetLandmarksByStateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Landmarks []*Landmark `protobuf:"bytes,1,rep,name=landmarks,proto3" json:"landmarks,omitempty"`
}

func (x *GetLandmarksByStateResponse) Reset() {
	*x = GetLandmarksByStateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_landmark_api_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLandmarksByStateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLandmarksByStateResponse) ProtoMessage() {}

func (x *GetLandmarksByStateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_landmark_api_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLandmarksByStateResponse.ProtoReflect.Descriptor instead.
func (*GetLandmarksByStateResponse) Descriptor() ([]byte, []int) {
	return file_rpc_landmark_api_service_proto_rawDescGZIP(), []int{4}
}

func (x *GetLandmarksByStateResponse) GetLandmarks() []*Landmark {
	if x != nil {
		return x.Landmarks
	}
	return nil
}

type DeleteLandmarkRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID string `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
}

func (x *DeleteLandmarkRequest) Reset() {
	*x = DeleteLandmarkRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_landmark_api_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteLandmarkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteLandmarkRequest) ProtoMessage() {}

func (x *DeleteLandmarkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_landmark_api_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteLandmarkRequest.ProtoReflect.Descriptor instead.
func (*DeleteLandmarkRequest) Descriptor() ([]byte, []int) {
	return file_rpc_landmark_api_service_proto_rawDescGZIP(), []int{5}
}

func (x *DeleteLandmarkRequest) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

type UpdateLandmarkRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID          string                  `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Name        *wrapperspb.StringValue `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description *wrapperspb.StringValue `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Address     *wrapperspb.StringValue `protobuf:"bytes,4,opt,name=address,proto3" json:"address,omitempty"`
	State       *wrapperspb.StringValue `protobuf:"bytes,5,opt,name=state,proto3" json:"state,omitempty"`
}

func (x *UpdateLandmarkRequest) Reset() {
	*x = UpdateLandmarkRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_landmark_api_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateLandmarkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateLandmarkRequest) ProtoMessage() {}

func (x *UpdateLandmarkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_landmark_api_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateLandmarkRequest.ProtoReflect.Descriptor instead.
func (*UpdateLandmarkRequest) Descriptor() ([]byte, []int) {
	return file_rpc_landmark_api_service_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateLandmarkRequest) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *UpdateLandmarkRequest) GetName() *wrapperspb.StringValue {
	if x != nil {
		return x.Name
	}
	return nil
}

func (x *UpdateLandmarkRequest) GetDescription() *wrapperspb.StringValue {
	if x != nil {
		return x.Description
	}
	return nil
}

func (x *UpdateLandmarkRequest) GetAddress() *wrapperspb.StringValue {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *UpdateLandmarkRequest) GetState() *wrapperspb.StringValue {
	if x != nil {
		return x.State
	}
	return nil
}

type Landmark struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID          string `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	UserId      string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Name        string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Slug        string `protobuf:"bytes,4,opt,name=slug,proto3" json:"slug,omitempty"`
	Address     string `protobuf:"bytes,5,opt,name=address,proto3" json:"address,omitempty"`
	State       string `protobuf:"bytes,6,opt,name=state,proto3" json:"state,omitempty"`
	Description string `protobuf:"bytes,7,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *Landmark) Reset() {
	*x = Landmark{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_landmark_api_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Landmark) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Landmark) ProtoMessage() {}

func (x *Landmark) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_landmark_api_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Landmark.ProtoReflect.Descriptor instead.
func (*Landmark) Descriptor() ([]byte, []int) {
	return file_rpc_landmark_api_service_proto_rawDescGZIP(), []int{7}
}

func (x *Landmark) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *Landmark) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *Landmark) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Landmark) GetSlug() string {
	if x != nil {
		return x.Slug
	}
	return ""
}

func (x *Landmark) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *Landmark) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *Landmark) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

var File_rpc_landmark_api_service_proto protoreflect.FileDescriptor

var file_rpc_landmark_api_service_proto_rawDesc = []byte{
	0x0a, 0x1e, 0x72, 0x70, 0x63, 0x2f, 0x6c, 0x61, 0x6e, 0x64, 0x6d, 0x61, 0x72, 0x6b, 0x2d, 0x61,
	0x70, 0x69, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x18, 0x67, 0x65, 0x7a, 0x64, 0x69, 0x6d, 0x67, 0x6f, 0x72, 0x64, 0x75, 0x6d, 0x2e, 0x6c,
	0x61, 0x6e, 0x64, 0x6d, 0x61, 0x72, 0x6b, 0x61, 0x70, 0x69, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x77, 0x72, 0x61, 0x70,
	0x70, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74,
	0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xaa, 0x01, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x4c, 0x61, 0x6e, 0x64, 0x6d, 0x61, 0x72, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x73, 0x6c, 0x75, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x6c,
	0x75, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x14, 0x0a, 0x05,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0x24, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x6e, 0x64, 0x6d,
	0x61, 0x72, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x22, 0x2e, 0x0a, 0x18, 0x47, 0x65,
	0x74, 0x4c, 0x61, 0x6e, 0x64, 0x6d, 0x61, 0x72, 0x6b, 0x42, 0x79, 0x53, 0x6c, 0x75, 0x67, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6c, 0x75, 0x67, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x6c, 0x75, 0x67, 0x22, 0x32, 0x0a, 0x1a, 0x47, 0x65,
	0x74, 0x4c, 0x61, 0x6e, 0x64, 0x6d, 0x61, 0x72, 0x6b, 0x73, 0x42, 0x79, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x22, 0x5f,
	0x0a, 0x1b, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x6e, 0x64, 0x6d, 0x61, 0x72, 0x6b, 0x73, 0x42, 0x79,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a,
	0x09, 0x6c, 0x61, 0x6e, 0x64, 0x6d, 0x61, 0x72, 0x6b, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x22, 0x2e, 0x67, 0x65, 0x7a, 0x64, 0x69, 0x6d, 0x67, 0x6f, 0x72, 0x64, 0x75, 0x6d, 0x2e,
	0x6c, 0x61, 0x6e, 0x64, 0x6d, 0x61, 0x72, 0x6b, 0x61, 0x70, 0x69, 0x2e, 0x4c, 0x61, 0x6e, 0x64,
	0x6d, 0x61, 0x72, 0x6b, 0x52, 0x09, 0x6c, 0x61, 0x6e, 0x64, 0x6d, 0x61, 0x72, 0x6b, 0x73, 0x22,
	0x27, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4c, 0x61, 0x6e, 0x64, 0x6d, 0x61, 0x72,
	0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x22, 0x85, 0x02, 0x0a, 0x15, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x4c, 0x61, 0x6e, 0x64, 0x6d, 0x61, 0x72, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x49, 0x44, 0x12, 0x30, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x3e, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x36, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x32, 0x0a, 0x05,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x22, 0xad, 0x01, 0x0a, 0x08, 0x4c, 0x61, 0x6e, 0x64, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x0e, 0x0a,
	0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x12, 0x17, 0x0a,
	0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6c,
	0x75, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x6c, 0x75, 0x67, 0x12, 0x18,
	0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x20,
	0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x32, 0x96, 0x04, 0x0a, 0x0b, 0x4c, 0x61, 0x6e, 0x64, 0x6d, 0x61, 0x72, 0x6b, 0x41, 0x50, 0x49,
	0x12, 0x5f, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x6e, 0x64, 0x6d, 0x61, 0x72, 0x6b, 0x12,
	0x2c, 0x2e, 0x67, 0x65, 0x7a, 0x64, 0x69, 0x6d, 0x67, 0x6f, 0x72, 0x64, 0x75, 0x6d, 0x2e, 0x6c,
	0x61, 0x6e, 0x64, 0x6d, 0x61, 0x72, 0x6b, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x61,
	0x6e, 0x64, 0x6d, 0x61, 0x72, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e,
	0x67, 0x65, 0x7a, 0x64, 0x69, 0x6d, 0x67, 0x6f, 0x72, 0x64, 0x75, 0x6d, 0x2e, 0x6c, 0x61, 0x6e,
	0x64, 0x6d, 0x61, 0x72, 0x6b, 0x61, 0x70, 0x69, 0x2e, 0x4c, 0x61, 0x6e, 0x64, 0x6d, 0x61, 0x72,
	0x6b, 0x12, 0x6b, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x6e, 0x64, 0x6d, 0x61, 0x72, 0x6b,
	0x42, 0x79, 0x53, 0x6c, 0x75, 0x67, 0x12, 0x32, 0x2e, 0x67, 0x65, 0x7a, 0x64, 0x69, 0x6d, 0x67,
	0x6f, 0x72, 0x64, 0x75, 0x6d, 0x2e, 0x6c, 0x61, 0x6e, 0x64, 0x6d, 0x61, 0x72, 0x6b, 0x61, 0x70,
	0x69, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x6e, 0x64, 0x6d, 0x61, 0x72, 0x6b, 0x42, 0x79, 0x53,
	0x6c, 0x75, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x67, 0x65, 0x7a,
	0x64, 0x69, 0x6d, 0x67, 0x6f, 0x72, 0x64, 0x75, 0x6d, 0x2e, 0x6c, 0x61, 0x6e, 0x64, 0x6d, 0x61,
	0x72, 0x6b, 0x61, 0x70, 0x69, 0x2e, 0x4c, 0x61, 0x6e, 0x64, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x82,
	0x01, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x6e, 0x64, 0x6d, 0x61, 0x72, 0x6b, 0x73, 0x42,
	0x79, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x34, 0x2e, 0x67, 0x65, 0x7a, 0x64, 0x69, 0x6d, 0x67,
	0x6f, 0x72, 0x64, 0x75, 0x6d, 0x2e, 0x6c, 0x61, 0x6e, 0x64, 0x6d, 0x61, 0x72, 0x6b, 0x61, 0x70,
	0x69, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x6e, 0x64, 0x6d, 0x61, 0x72, 0x6b, 0x73, 0x42, 0x79,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x35, 0x2e, 0x67,
	0x65, 0x7a, 0x64, 0x69, 0x6d, 0x67, 0x6f, 0x72, 0x64, 0x75, 0x6d, 0x2e, 0x6c, 0x61, 0x6e, 0x64,
	0x6d, 0x61, 0x72, 0x6b, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x6e, 0x64, 0x6d,
	0x61, 0x72, 0x6b, 0x73, 0x42, 0x79, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x61, 0x6e,
	0x64, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x2f, 0x2e, 0x67, 0x65, 0x7a, 0x64, 0x69, 0x6d, 0x67, 0x6f,
	0x72, 0x64, 0x75, 0x6d, 0x2e, 0x6c, 0x61, 0x6e, 0x64, 0x6d, 0x61, 0x72, 0x6b, 0x61, 0x70, 0x69,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x61, 0x6e, 0x64, 0x6d, 0x61, 0x72, 0x6b, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x59,
	0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4c, 0x61, 0x6e, 0x64, 0x6d, 0x61, 0x72, 0x6b,
	0x12, 0x2f, 0x2e, 0x67, 0x65, 0x7a, 0x64, 0x69, 0x6d, 0x67, 0x6f, 0x72, 0x64, 0x75, 0x6d, 0x2e,
	0x6c, 0x61, 0x6e, 0x64, 0x6d, 0x61, 0x72, 0x6b, 0x61, 0x70, 0x69, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x4c, 0x61, 0x6e, 0x64, 0x6d, 0x61, 0x72, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x42, 0x13, 0x5a, 0x11, 0x2f, 0x72, 0x70,
	0x63, 0x2f, 0x6c, 0x61, 0x6e, 0x64, 0x6d, 0x61, 0x72, 0x6b, 0x2d, 0x61, 0x70, 0x69, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_rpc_landmark_api_service_proto_rawDescOnce sync.Once
	file_rpc_landmark_api_service_proto_rawDescData = file_rpc_landmark_api_service_proto_rawDesc
)

func file_rpc_landmark_api_service_proto_rawDescGZIP() []byte {
	file_rpc_landmark_api_service_proto_rawDescOnce.Do(func() {
		file_rpc_landmark_api_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_rpc_landmark_api_service_proto_rawDescData)
	})
	return file_rpc_landmark_api_service_proto_rawDescData
}

var file_rpc_landmark_api_service_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_rpc_landmark_api_service_proto_goTypes = []interface{}{
	(*CreateLandmarkRequest)(nil),       // 0: gezdimgordum.landmarkapi.CreateLandmarkRequest
	(*GetLandmarkRequest)(nil),          // 1: gezdimgordum.landmarkapi.GetLandmarkRequest
	(*GetLandmarkBySlugRequest)(nil),    // 2: gezdimgordum.landmarkapi.GetLandmarkBySlugRequest
	(*GetLandmarksByStateRequest)(nil),  // 3: gezdimgordum.landmarkapi.GetLandmarksByStateRequest
	(*GetLandmarksByStateResponse)(nil), // 4: gezdimgordum.landmarkapi.GetLandmarksByStateResponse
	(*DeleteLandmarkRequest)(nil),       // 5: gezdimgordum.landmarkapi.DeleteLandmarkRequest
	(*UpdateLandmarkRequest)(nil),       // 6: gezdimgordum.landmarkapi.UpdateLandmarkRequest
	(*Landmark)(nil),                    // 7: gezdimgordum.landmarkapi.Landmark
	(*wrapperspb.StringValue)(nil),      // 8: google.protobuf.StringValue
	(*emptypb.Empty)(nil),               // 9: google.protobuf.Empty
}
var file_rpc_landmark_api_service_proto_depIdxs = []int32{
	7,  // 0: gezdimgordum.landmarkapi.GetLandmarksByStateResponse.landmarks:type_name -> gezdimgordum.landmarkapi.Landmark
	8,  // 1: gezdimgordum.landmarkapi.UpdateLandmarkRequest.name:type_name -> google.protobuf.StringValue
	8,  // 2: gezdimgordum.landmarkapi.UpdateLandmarkRequest.description:type_name -> google.protobuf.StringValue
	8,  // 3: gezdimgordum.landmarkapi.UpdateLandmarkRequest.address:type_name -> google.protobuf.StringValue
	8,  // 4: gezdimgordum.landmarkapi.UpdateLandmarkRequest.state:type_name -> google.protobuf.StringValue
	1,  // 5: gezdimgordum.landmarkapi.LandmarkAPI.GetLandmark:input_type -> gezdimgordum.landmarkapi.GetLandmarkRequest
	2,  // 6: gezdimgordum.landmarkapi.LandmarkAPI.GetLandmarkBySlug:input_type -> gezdimgordum.landmarkapi.GetLandmarkBySlugRequest
	3,  // 7: gezdimgordum.landmarkapi.LandmarkAPI.GetLandmarksByState:input_type -> gezdimgordum.landmarkapi.GetLandmarksByStateRequest
	0,  // 8: gezdimgordum.landmarkapi.LandmarkAPI.CreateLandmark:input_type -> gezdimgordum.landmarkapi.CreateLandmarkRequest
	5,  // 9: gezdimgordum.landmarkapi.LandmarkAPI.DeleteLandmark:input_type -> gezdimgordum.landmarkapi.DeleteLandmarkRequest
	7,  // 10: gezdimgordum.landmarkapi.LandmarkAPI.GetLandmark:output_type -> gezdimgordum.landmarkapi.Landmark
	7,  // 11: gezdimgordum.landmarkapi.LandmarkAPI.GetLandmarkBySlug:output_type -> gezdimgordum.landmarkapi.Landmark
	4,  // 12: gezdimgordum.landmarkapi.LandmarkAPI.GetLandmarksByState:output_type -> gezdimgordum.landmarkapi.GetLandmarksByStateResponse
	9,  // 13: gezdimgordum.landmarkapi.LandmarkAPI.CreateLandmark:output_type -> google.protobuf.Empty
	9,  // 14: gezdimgordum.landmarkapi.LandmarkAPI.DeleteLandmark:output_type -> google.protobuf.Empty
	10, // [10:15] is the sub-list for method output_type
	5,  // [5:10] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_rpc_landmark_api_service_proto_init() }
func file_rpc_landmark_api_service_proto_init() {
	if File_rpc_landmark_api_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_rpc_landmark_api_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateLandmarkRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_landmark_api_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLandmarkRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_landmark_api_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLandmarkBySlugRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_landmark_api_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLandmarksByStateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_landmark_api_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLandmarksByStateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_landmark_api_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteLandmarkRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_landmark_api_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateLandmarkRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_landmark_api_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Landmark); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_rpc_landmark_api_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_rpc_landmark_api_service_proto_goTypes,
		DependencyIndexes: file_rpc_landmark_api_service_proto_depIdxs,
		MessageInfos:      file_rpc_landmark_api_service_proto_msgTypes,
	}.Build()
	File_rpc_landmark_api_service_proto = out.File
	file_rpc_landmark_api_service_proto_rawDesc = nil
	file_rpc_landmark_api_service_proto_goTypes = nil
	file_rpc_landmark_api_service_proto_depIdxs = nil
}
